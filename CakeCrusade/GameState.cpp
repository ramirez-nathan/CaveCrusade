#include "GameState.hpp"
#include <string> 
#include <algorithm>

using namespace std;

GameState::GameState()
{ 
    LevelHeight = 14;
    LevelWidth = 23;
    tileset = "assets/tilemap/tileset1.png";
    CurrLevelName = "1a";
    hasSpikes = false;
}

bool GameState::loadLevel() // Checks if the new level has been successfully loaded
{
    if (!Map.load(tileset, sf::Vector2u(16, 16), CurrentLevel, LevelWidth, LevelHeight)) 
        return false;
    else 
        return true;
}

void GameState::changeLevel(string levelName, Player& p, string type, SoundFx& s) // Changes the level based on door type and current level
{
    /*---------------------------------------------- Level 1 -------------------------------------------------*/
    
    if (type == "door") {
        if (levelName == "debug") {
            int* NewLevel = new int[23 * 14]
            {
                 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                 18,  6,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  8, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 18,
                 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
            };

            std::copy(NewLevel, NewLevel + (23 * 14), CurrentLevel);

            delete[] NewLevel;
        }

        else if (levelName == "1a") {
            int* NewLevel = new int[23 * 14]
            {
                 18,  18, 18, 19, 20, 21, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                 18,  6,   7, 22, 23, 24,  7,  7,  7,  7,  7, 44,  7,  7,  7,  7,  7,  7,  7,  7,  7,  8, 18,
                 18,  9,   0, 25, 26, 27,  0,  0,  0,  0,  0, 43,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0, 43,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0, 43,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  6,   7,  7,  7,  7,  7, 15,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0, 43,  0,  0,  0,  0,  0,  0, 43,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   2,  3, 43,  0,  0,  0,  0,  0,  0, 43,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   4,  5, 43,  0,  0,  0,  0,  0,  0, 43,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 45, 46, 47, 13, 18,
                 18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
            };

            std::copy(NewLevel, NewLevel + (23 * 14), CurrentLevel);

            delete[] NewLevel;

            CurrLevelName = "1b";
            p.changePosition(1250.f, 750.f);
        }

        else if (levelName == "1b") {
            int* NewLevel = new int[23 * 14]
            {
                 18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                 18,  6,   7,  7,  7,  7,  8, 18, 18, 18, 18, 18, 18, 18, 18, 18,  6,  7,  7,  7,  7,  8, 18,
                 18,  9,   0,  0,  0,  0, 10, 18, 18, 18, 19, 20, 21, 18, 18, 18,  9,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0, 39,  7,  7,  7, 22, 23, 24,  7,  7,  7, 40,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0, 25, 26, 27,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  11, 12, 12, 12, 12, 12, 12, 12, 12, 45, 46, 47, 12, 12, 12, 12, 12, 12, 12, 12, 13, 18,
                 18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
            };

            std::copy(NewLevel, NewLevel + (23 * 14), CurrentLevel);

            delete[] NewLevel;

            CurrLevelName = "1d";
            p.changePosition(739.f, 750.f);

        }

        /*---------------------------------------------- Level 2 -------------------------------------------------*/

        else if (levelName == "1d") {
            tileset = "assets/tilemap/tileset2.png"; // changes level color !! :)

            s.loadMusic("sound/music/icycave.wav");
            
            int* NewLevel = new int[23 * 14]
            {
                 18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 20, 21, 18, 18, 18,
                 18,  6,   7,  7,  7,  7,  7,  7,  7,  7,  8, 18,  6,  7,  7,  7,  7, 22, 23, 24,  7,  8, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0, 10, 18,  9,  0,  0,  0,  0, 25, 26, 27,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0, 10, 18,  9,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0, 10, 18,  9,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0, 39,  7, 40,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0, 41, 12, 42,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0, 10, 18,  9,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0, 10, 18,  9,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0, 10, 18,  9,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  11, 12, 45, 46, 47, 12, 12, 12, 12, 13, 18, 11, 12, 12, 12, 12, 12, 12, 12, 12, 13, 18,
                 18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
            };

            std::copy(NewLevel, NewLevel + (23 * 14), CurrentLevel);

            delete[] NewLevel;

            CurrLevelName = "2a";
            p.changePosition(291.f, 750.f);

        }

        else if (levelName == "2a") {

            int* NewLevel = new int[23 * 14]
            {
                 18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 20, 21, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                 18,  6,   7,  7,  7,  7,  7,  7,  7,  7, 22, 23, 24,  7,  7,  7,  7,  7,  7,  7,  7,  8, 18,
                 18,  9,   0,  0,  0,  0, 48,  0,  0,  0, 25, 26, 27,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0, 28, 30, 28, 29, 28, 50, 18,
                 18,  9,   0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0, 18, 18, 18, 18, 34, 50, 18,
                 18,  9,   0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0, 18, 18, 18, 18, 18, 50, 18,
                 18,  9,   2,  3,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0, 18, 18, 34, 18, 18, 50, 18,
                 18,  9,   4,  5,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0, 33, 18, 18, 18, 18, 50, 18,
                 18,  9,   0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0, 18, 18, 18, 18, 33, 50, 18,
                 18,  9,   0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0, 18, 33, 18, 18, 18, 50, 18,
                 18,  9,   0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0, 18, 18, 18, 34, 18, 50, 18,
                 18,  9,   0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0, 34, 18, 18, 18, 18, 50, 18,
                 18,  11, 12, 12, 12, 12, 12, 12, 12, 12, 45, 46, 47, 12, 12, 12, 12, 12, 12, 12, 12, 13, 18,
                 18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
            };

            hasSpikes = true;

            std::copy(NewLevel, NewLevel + (23 * 14), CurrentLevel);

            delete[] NewLevel;

            CurrLevelName = "2b";
            p.changePosition(739.f, 750.f);

        }

        else if (levelName == "2b") {

            int* NewLevel = new int[23 * 14]
            {
                 18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 20, 21, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                 18,  6,   7,  7,  7,  7,  7,  7,  7,  7, 22, 23, 24,  7,  7,  7,  7,  7,  7,  7,  7,  8, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0, 25, 26, 27,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0, 28, 28, 32, 28,  0,  0,  0,  0,  0,  0,  0, 28, 28, 28, 31,  0,  0, 10, 18,
                 18,  9,   0,  0, 18, 33, 18, 18,  0,  0,  0,  0,  0,  0,  0, 18, 34, 18, 18,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0, 31, 28, 28, 28,  0,  0,  0,  0,  0,  0,  0, 28, 28, 32, 28,  0,  0, 10, 18,
                 18,  9,   0,  0, 18, 18, 34, 18,  0,  0,  0,  0,  0,  0,  0, 18, 18, 18, 33,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  11, 12, 12, 12, 12, 12, 12, 12, 12, 45, 46, 47, 12, 12, 12, 12, 12, 12, 12, 12, 13, 18,
                 18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
            };

            std::copy(NewLevel, NewLevel + (23 * 14), CurrentLevel);

            delete[] NewLevel;

            CurrLevelName = "2d";
            p.changePosition(739.f, 750.f);

        }

            /*---------------------------------------------- Level 3 -------------------------------------------------*/

        else if (levelName == "2d") {
            tileset = "assets/tilemap/tileset3.png"; // changes level color !! :)

            s.loadMusic("sound/music/MysteriousDungeon.wav");

            int* NewLevel = new int[23 * 14]
            {
                 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                 18,  6,  7,  7,  7,  7,  8, 18, 18, 18, 18, 18, 18, 18, 18, 18,  6,  7,  7,  7,  7,  8, 18,
                 18,  9,  0,  0,  0,  0, 10, 18, 18, 18, 18, 18, 18, 18, 18, 18,  9,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0, 10, 18, 18, 18, 18, 18, 18, 18, 18, 18,  9,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0, 10, 18, 18, 18, 19, 20, 21, 18, 18, 18,  9,  0,  0,  0,  0, 10, 18,
                 18,  9, 28, 31, 28, 30, 37,  7,  7,  7, 22, 23, 24,  7,  7,  7, 38, 28, 30, 28, 29, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0, 25, 26, 27,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18, 11, 12, 12, 12, 12, 12, 12, 12, 12, 45, 46, 47, 12, 12, 12, 12, 12, 12, 12, 12, 13, 18,
                 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
            };

            std::copy(NewLevel, NewLevel + (23 * 14), CurrentLevel);

            delete[] NewLevel;

            CurrLevelName = "3a";
            p.changePosition(739.f, 750.f);

        }

        else if (levelName == "3a") {

            int* NewLevel = new int[23 * 14]
            {
                 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 20, 21, 18, 18, 18,
                 18,  6,  7,  7,  7,  8,  6,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7, 22, 23, 24,  7,  8, 18,
                 18,  9,  0,  0,  0, 10,  9,  0,  0,  0,  0,  0,  0,  0, 48,  0,  0, 25, 26, 27,  0, 10, 18,
                 18,  9,  0,  0,  0, 10,  9,  0,  0,  0,  0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0, 10,  9,  0,  0,  0,  0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0, 10,  9,  0,  0,  0,  0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0, 10, 11, 12, 17,  0,  0, 16, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 18,
                 18,  9,  0,  0,  0, 10, 18, 18,  9,  0,  0, 10, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                 18,  9,  0,  0,  0, 39,  7,  7, 40,  0,  0, 39,  7,  7,  7,  7,  7,  7,  7,  7,  7,  8, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 48,  0,  0,  0,  0,  2,  3, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 48,  0,  0,  0,  0,  4,  5, 10, 18,
                 18, 11, 45, 46, 47, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 18,
                 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
            };

            std::copy(NewLevel, NewLevel + (23 * 14), CurrentLevel);

            delete[] NewLevel;

            hasSpikes = true;

            CurrLevelName = "3b";
            p.changePosition(226.f, 750.f);

        }

        else if (levelName == "2b") {

            int* NewLevel = new int[23 * 14]
            {
                 18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 20, 21, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                 18,  6,   7,  7,  7,  7,  7,  7,  7,  7, 22, 23, 24,  7,  7,  7,  7,  7,  7,  7,  7,  8, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0, 25, 26, 27,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0, 28, 28, 32, 28,  0,  0,  0,  0,  0,  0,  0, 28, 28, 28, 31,  0,  0, 10, 18,
                 18,  9,   0,  0, 18, 33, 18, 18,  0,  0,  0,  0,  0,  0,  0, 18, 34, 18, 18,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0, 31, 28, 28, 28,  0,  0,  0,  0,  0,  0,  0, 28, 28, 32, 28,  0,  0, 10, 18,
                 18,  9,   0,  0, 18, 18, 34, 18,  0,  0,  0,  0,  0,  0,  0, 18, 18, 18, 33,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  11, 12, 12, 12, 12, 12, 12, 12, 12, 45, 46, 47, 12, 12, 12, 12, 12, 12, 12, 12, 13, 18,
                 18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
            };

            std::copy(NewLevel, NewLevel + (23 * 14), CurrentLevel);

            delete[] NewLevel;

            CurrLevelName = "2d";
            p.changePosition(739.f, 750.f);

        }

        else if (levelName == "3b") {

            int* NewLevel = new int[23 * 14]
            {
                 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 20, 21, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                 18,  6,  7,  7,  7,  7,  7,  7,  7,  7, 22, 23, 24,  7,  7,  7,  7,  7,  7,  7,  7,  8, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0, 25, 26, 27,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9, 48, 48, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 48, 48, 10, 18,
                 18,  9, 48, 48, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 48, 48, 10, 18,
                 18,  9, 48, 48, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 48, 48, 10, 18,
                 18,  9, 48, 48, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 48, 48, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18, 11, 12, 12, 12, 12, 12, 12, 12, 12, 45, 46, 47, 12, 12, 12, 12, 12, 12, 12, 12, 13, 18,
                 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
            };

            std::copy(NewLevel, NewLevel + (23 * 14), CurrentLevel);

            delete[] NewLevel;

            CurrLevelName = "3d";
            p.changePosition(739.f, 750.f);

            hasSpikes = true;

        }









            /*---------------------------------------------- Level 4 -------------------------------------------------*/
    



    }


    /*---------------------------------------------- Stairs -------------------------------------------------*/


    else if (type == "stair") {

        if (levelName == "1b") {
            int* NewLevel = new int[23 * 14]
            {
                 18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                 18,  6,   7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  8, 18,
                 18,  9,   2,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   4,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0, 28, 28, 32, 28, 31, 28, 18,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0, 18, 33, 18, 18, 18, 18, 18,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0, 34, 18, 18, 34, 18, 18, 18,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0, 18, 18, 18, 18, 18, 33, 18,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 18,
                 18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
            };

            std::copy(NewLevel, NewLevel + (23 * 14), CurrentLevel);

            delete[] NewLevel;

            CurrLevelName = "1c";
            p.changePosition(290.f, 180.f);

        }

        else if (levelName == "1c") {
            int* NewLevel = new int[23 * 14]
            {
                 18,  18, 18, 19, 20, 21, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                 18,  6,   7, 22, 23, 24,  7,  7,  7,  7,  7, 44,  7,  7,  7,  7,  7,  7,  7,  7,  7,  8, 18,
                 18,  9,   0, 25, 26, 27,  0,  0,  0,  0,  0, 43,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0, 43,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0, 43,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  6,   7,  7,  7,  7,  7, 15,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0, 43,  0,  0,  0,  0,  0,  0, 43,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   2,  3, 43,  0,  0,  0,  0,  0,  0, 43,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   4,  5, 43,  0,  0,  0,  0,  0,  0, 43,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 45, 46, 47, 13, 18,
                 18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
            };

            std::copy(NewLevel, NewLevel + (23 * 14), CurrentLevel);

            delete[] NewLevel;

            CurrLevelName = "1b";
            p.changePosition(193.f, 616.f);
        }

        /*---------------------------------------------- Level 2 -------------------------------------------------*/

        else if (levelName == "2c") {

            int* NewLevel = new int[23 * 14]
            {
                 18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 20, 21, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                 18,  6,   7,  7,  7,  7,  7,  7,  7,  7, 22, 23, 24,  7,  7,  7,  7,  7,  7,  7,  7,  8, 18,
                 18,  9,   0,  0,  0,  0, 49,  0,  0,  0, 25, 26, 27,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0, 49,  0,  0,  0,  0,  0,  0,  0,  0,  0, 28, 30, 28, 29, 28, 50, 18,
                 18,  9,   0,  0,  0,  0, 49,  0,  0,  0,  0,  0,  0,  0,  0,  0, 18, 18, 18, 18, 34, 50, 18,
                 18,  9,   0,  0,  0,  0, 49,  0,  0,  0,  0,  0,  0,  0,  0,  0, 18, 18, 18, 18, 18, 50, 18,
                 18,  9,   2,  3,  0,  0, 49,  0,  0,  0,  0,  0,  0,  0,  0,  0, 18, 18, 34, 18, 18, 50, 18,
                 18,  9,   4,  5,  0,  0, 49,  0,  0,  0,  0,  0,  0,  0,  0,  0, 33, 18, 18, 18, 18, 50, 18,
                 18,  9,   0,  0,  0,  0, 49,  0,  0,  0,  0,  0,  0,  0,  0,  0, 18, 18, 18, 18, 33, 50, 18,
                 18,  9,   0,  0,  0,  0, 49,  0,  0,  0,  0,  0,  0,  0,  0,  0, 18, 33, 18, 18, 18, 50, 18,
                 18,  9,   0,  0,  0,  0, 49,  0,  0,  0,  0,  0,  0,  0,  0,  0, 18, 18, 18, 34, 18, 50, 18,
                 18,  9,   0,  0,  0,  0, 49,  0,  0,  0,  0,  0,  0,  0,  0,  0, 34, 18, 18, 18, 18, 50, 18,
                 18,  11, 12, 12, 12, 12, 12, 12, 12, 12, 45, 46, 47, 12, 12, 12, 12, 12, 12, 12, 12, 13, 18,
                 18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
            };

            std::copy(NewLevel, NewLevel + (23 * 14), CurrentLevel);

            delete[] NewLevel;

            CurrLevelName = "2b";
            p.changePosition(284.f, 456.f);

        }

        else if (levelName == "2b") {

            int* NewLevel = new int[23 * 14]
            {
                 18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                 18,  6,   7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  8, 18,
                 18,  9,   0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  3, 10, 18,
                 18,  9,   0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  5, 10, 18,
                 18,  9,   0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,   0,  0,  0,  0, 48,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 18,
                 18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
            };

            hasSpikes = true; 

            std::copy(NewLevel, NewLevel + (23 * 14), CurrentLevel);

            delete[] NewLevel;

            CurrLevelName = "2c";
            p.changePosition(1187.f, 456.f);

        }


        /*---------------------------------------------- Level 3 -------------------------------------------------*/


        else if (levelName == "3c") {

            int* NewLevel = new int[23 * 14]
            {
                 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 20, 21, 18, 18, 18,
                 18,  6,  7,  7,  7,  8,  6,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7, 22, 23, 24,  7,  8, 18,
                 18,  9,  0,  0,  0, 10,  9,  0,  0,  0,  0,  0,  0,  0, 49,  0,  0, 25, 26, 27,  0, 10, 18,
                 18,  9,  0,  0,  0, 10,  9,  0,  0,  0,  0,  0,  0,  0, 49,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0, 10,  9,  0,  0,  0,  0,  0,  0,  0, 49,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0, 10,  9,  0,  0,  0,  0,  0,  0,  0, 49,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0, 10, 11, 12, 17,  0,  0, 16, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 18,
                 18,  9,  0,  0,  0, 10, 18, 18,  9,  0,  0, 10, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                 18,  9,  0,  0,  0, 39,  7,  7, 40,  0,  0, 39,  7,  7,  7,  7,  7,  7,  7,  7,  7,  8, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 49,  0,  0,  0,  0,  0,  0, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 49,  0,  0,  0,  0,  2,  3, 10, 18,
                 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 49,  0,  0,  0,  0,  4,  5, 10, 18,
                 18, 11, 45, 46, 47, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 18,
                 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
            };

            std::copy(NewLevel, NewLevel + (23 * 14), CurrentLevel);

            delete[] NewLevel;

            CurrLevelName = "3b";
            p.changePosition(1282.f, 627.f);

        }

        else if (levelName == "3b") {

            int* NewLevel = new int[23 * 14]
            {
                    18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                    18,  6,   7,  7,  8, 18,  6,  7,  7,  7,  7,  7,  7,  7,  8, 18,  6,  7,  7,  7,  7,  8, 18,
                    18,  9,   2,  3, 10, 18,  9,  0,  0,  0,  0,  0,  0,  0, 10, 18,  9,  0,  0,  0,  0, 10, 18,
                    18,  9,   4,  5, 10, 18,  9,  0,  0,  0,  0,  0,  0,  0, 10, 18,  9,  0,  0,  0,  0, 10, 18,
                    18,  9,   0,  0, 10, 18,  9,  0,  0, 41, 12, 42,  0,  0, 10, 18,  9,  0,  0,  0,  0, 10, 18,
                    18,  9,   0,  0, 10, 18,  9,  0,  0, 10, 18,  9,  0,  0, 10, 18,  9,  0,  0,  0,  0, 10, 18,
                    18,  9,   0,  0, 10, 18,  9,  0,  0, 10, 18,  9,  0,  0, 10, 18,  9,  0,  0,  0,  0, 10, 18,
                    18,  9,   0,  0, 10, 18,  9,  0,  0, 10, 18,  9,  0,  0, 10, 18,  9,  0,  0,  0,  0, 10, 18,
                    18,  9,   0,  0, 10, 18,  9,  0,  0, 10, 18,  9,  0,  0, 10, 18,  9,  0,  0,  0,  0, 10, 18,
                    18,  9,   0,  0, 14,  7, 15,  0,  0, 10, 18,  9,  0,  0, 14,  7, 15,  0,  0,  0,  0, 10, 18,
                    18,  9,   0,  0,  0,  0,  0,  0,  0, 10, 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                    18,  9,   0,  0,  0,  0,  0,  0,  0, 10, 18,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
                    18,  11, 12, 12, 12, 12, 12, 12, 12, 13, 18, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 18,
                    18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
            };

            hasSpikes = true;

            std::copy(NewLevel, NewLevel + (23 * 14), CurrentLevel);

            delete[] NewLevel;

            CurrLevelName = "3c";
            p.changePosition(193.f, 311.f);

        }








    }

}


/*
int NewLevel[23 * 14] =
        {
             18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
             18,  6,   7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  8, 18,
             18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
             18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
             18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
             18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
             18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
             18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
             18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
             18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
             18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
             18,  9,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 18,
             18,  11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 18,
             18,  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
        };



*/


